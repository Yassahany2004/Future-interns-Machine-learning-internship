import yfinance as yf
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

ticker = "AAPL"
data = yf.download(ticker, start="2015-01-01", end="2023-12-31")
data = data[['Close']].reset_index()

data['Date'] = pd.to_datetime(data['Date'])
data['Date_Ordinal'] = data['Date'].map(pd.Timestamp.toordinal)

X = data[['Date_Ordinal']]
y = data['Close']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)

model = LinearRegression()
model.fit(X_train, y_train)

predictions = model.predict(X_test)
mse = mean_squared_error(y_test, predictions)
print(f"Mean Squared Error: {mse:.2f}")

plt.figure(figsize=(14, 6))
plt.plot(data['Date'], data['Close'], label='Actual Prices', color='blue')
plt.plot(data.loc[y_test.index, 'Date'], predictions, label='Predicted Prices', color='red')
plt.title(f"{ticker} Stock Price Prediction using Linear Regression")
plt.xlabel("Date")
plt.ylabel("Price")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()




